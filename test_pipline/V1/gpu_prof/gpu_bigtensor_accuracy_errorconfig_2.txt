paddle.Tensor.imag(Tensor([16, 257, 511],"complex64"), )
paddle.Tensor.imag(Tensor([16, 1025, 107],"complex64"), )
paddle.Tensor.imag(Tensor([16, 513, 213],"complex64"), )
paddle.Tensor.index_select(Tensor([4004, 24],"float32"), axis=0, index=Tensor([182],"int64"), )
paddle.Tensor.index_select(Tensor([454, 24],"float32"), axis=0, index=Tensor([130],"int64"), )
paddle.Tensor.index_select(Tensor([454, 24],"float32"), axis=0, index=Tensor([91],"int64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([2, 5, 4],"float64"), )
paddle.Tensor.inverse(Tensor([36, 36],"float32"), )
paddle.Tensor.inverse(Tensor([4, 2, 4, 4],"float64"), )
paddle.Tensor.inverse(Tensor([3, 6, 6],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 40],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 40, 100],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 100, 40],"float64"), )
paddle.Tensor.isclose(x=Tensor([3, 4, 5],"float64"), y=Tensor([3, 4, 5],"float64"), )
paddle.Tensor.isclose(x=Tensor([6],"float64"), y=Tensor([6],"float64"), )
paddle.Tensor.isclose(x=Tensor([2],"float32"), y=Tensor([2],"float32"), )
paddle.Tensor.isinf(Tensor([],"float32"), )
paddle.Tensor.isnan(Tensor([35968],"float32"), )
paddle.Tensor.isnan(Tensor([16384],"float32"), )
paddle.Tensor.isnan(Tensor([2160],"float64"), )
paddle.Tensor.item(Tensor([3, 3],"float32"), 0, )
paddle.Tensor.item(Tensor([2, 1, 1],"int32"), 0, )
paddle.Tensor.item(Tensor([2, 1, 1],"int64"), 0, )
paddle.Tensor.kthvalue(Tensor([2, 200, 10],"float32"), k=200, axis=1, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 3],"float64"), y=Tensor([4, 5, 4, 3],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 3],"float64"), y=Tensor([4, 5, 4, 3],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 3],"float64"), y=Tensor([4, 5, 4, 3],"float64"), weight=1.0, )
paddle.Tensor.less(Tensor([10, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.lgamma(Tensor([100, 100, 100],"float64"), )
paddle.Tensor.lgamma(Tensor([5, 7, 8, 10],"float64"), )
paddle.Tensor.lgamma(Tensor([5, 7, 8],"float64"), )
paddle.Tensor.log(Tensor([100, 200, 100],"float64"), )
paddle.Tensor.log(Tensor([4800, 101],"float32"), )
paddle.Tensor.log(Tensor([10000, 5, 3],"float64"), )
paddle.Tensor.log10(Tensor([80, 499],"float32"), )
paddle.Tensor.log1p(Tensor([2, 3, 2],"float64"), )
paddle.Tensor.log1p(Tensor([10],"float64"), )
paddle.Tensor.log1p(Tensor([2, 3],"float32"), )
paddle.Tensor.logical_and(Tensor([409600],"bool"), Tensor([409600],"bool"), )
paddle.Tensor.logical_and(Tensor([408921],"bool"), Tensor([408921],"bool"), )
paddle.Tensor.logical_and(Tensor([408910],"bool"), Tensor([408910],"bool"), )
paddle.Tensor.logical_not(Tensor([60000],"bool"), )
paddle.Tensor.logical_not(Tensor([35968],"bool"), )
paddle.Tensor.logical_not(Tensor([16384],"bool"), )
paddle.Tensor.logical_or(Tensor([409600],"bool"), Tensor([409600],"bool"), )
paddle.Tensor.logical_or(Tensor([408921],"bool"), Tensor([408921],"bool"), )
paddle.Tensor.logical_or(Tensor([408910],"bool"), Tensor([408910],"bool"), )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 5],"float64"), eps=0.2, )
paddle.Tensor.lu(Tensor([4, 3, 2, 2],"float64"), )
paddle.Tensor.lu(Tensor([3, 3, 3],"float64"), )
paddle.Tensor.lu(Tensor([3, 3],"float32"), )
paddle.Tensor.masked_fill(Tensor([1, 38367, 256],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 256],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 256],"float32"), Tensor([1, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_select(Tensor([60000, 50],"float32"), Tensor([60000, 50],"bool"), )
paddle.Tensor.masked_select(Tensor([15000, 50],"float32"), Tensor([15000, 50],"bool"), )
paddle.Tensor.masked_select(Tensor([409600],"float32"), Tensor([409600],"bool"), )
paddle.Tensor.matmul(Tensor([128, 16, 257, 257],"float32"), Tensor([128, 16, 257, 64],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 257, 257],"float32"), Tensor([124, 16, 257, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 197],"float32"), Tensor([128, 12, 197, 64],"float32"), )
paddle.Tensor.max(Tensor([1, 400, 65856],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 400, 65856],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([324000, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.mean(Tensor([128, 192, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([128, 128, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.min(Tensor([1, 400, 65856, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 525, 12096, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 811],"float32"), axis=1, )
paddle.Tensor.mm(Tensor([10, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.mod(Tensor([1],"int64"), Tensor([],"int64"), )
paddle.Tensor.mode(Tensor([3, 2, 3],"float64"), )
paddle.Tensor.mode(Tensor([3, 2, 3],"float64"), axis=1, keepdim=False, )
paddle.Tensor.mode(Tensor([3, 2, 3],"float64"), axis=2, keepdim=True, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 7],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5],"float64"), source=0, destination=2, )
paddle.Tensor.multigammaln(Tensor([7],"float32"), 3, )
paddle.Tensor.multiply(Tensor([160, 3072],"float16"), Tensor([160, 1],"float32"), )
paddle.Tensor.multiply(Tensor([160, 3072],"float32"), Tensor([160, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 768],"float16"), Tensor([512, 1],"float32"), )
paddle.Tensor.nansum(Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 3, 3],"float32"), )
paddle.Tensor.nansum(Tensor([3, 3, 3],"float64"), )
paddle.Tensor.neg(Tensor([66244],"float32"), )
paddle.Tensor.neg(Tensor([23619],"float32"), )
paddle.Tensor.neg(Tensor([17157],"float32"), )
paddle.Tensor.nonzero(Tensor([52640, 14],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 13],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 12],"bool"), )
paddle.Tensor.norm(Tensor([100352, 8192],"float32"), )
paddle.Tensor.norm(Tensor([8192, 100352],"float32"), )
paddle.Tensor.norm(Tensor([8192, 57344],"float32"), )
paddle.Tensor.not_equal(Tensor([128, 128],"int64"), Tensor([128, 128],"int64"), )
paddle.Tensor.not_equal(Tensor([13, 14],"bool"), Tensor([1],"bool"), )
paddle.Tensor.not_equal(Tensor([13, 14],"int64"), Tensor([1],"int64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.Tensor.pow(Tensor([128, 192, 96, 96],"float32"), 2, )
paddle.Tensor.pow(Tensor([128, 128, 96, 96],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 128, 96, 96],"float32"), 2, )
paddle.Tensor.prod(Tensor([1, 400, 65856, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2100, 12096, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 525, 12096, 2],"float32"), -1, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.5, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.75, axis=3, keepdim=True, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.75, axis=5, )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 4, 4],"float64"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 4],"float64"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4],"float64"), )
paddle.Tensor.real(Tensor([8, 32, 481, 481],"complex64"), )
paddle.Tensor.real(Tensor([16, 257, 511],"complex64"), )
paddle.Tensor.real(Tensor([16, 1025, 107],"complex64"), )
paddle.Tensor.reciprocal(Tensor([10, 20, 1],"float32"), )
paddle.Tensor.reciprocal(Tensor([10, 20],"float32"), )
paddle.Tensor.reciprocal(Tensor([10, 12],"float32"), )
paddle.Tensor.remainder(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.repeat_interleave(Tensor([1, 3, 64, 128],"float64"), 256, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([1, 1, 64, 128],"float64"), 3, axis=1, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 4, 5],"float64"), repeats=2, )
paddle.Tensor.reshape(Tensor([95872, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([90880, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([89216, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 4],"float64"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.round(Tensor([10, 20, 1],"float32"), )
paddle.Tensor.round(Tensor([10, 20],"float32"), )
paddle.Tensor.round(Tensor([],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 20, 1],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 20],"float32"), )
paddle.Tensor.scale(Tensor([100352, 8192],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([8192, 100352],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([8192, 57344],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.set_(Tensor([20],"bool"), Tensor([15, 3],"bool"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"complex128"), Tensor([15, 3],"complex128"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"complex64"), Tensor([15, 3],"complex64"), list[20,], list[2,], 0, )
paddle.Tensor.sigmoid(Tensor([1, 8550, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 6380, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 1100, 4],"float32"), )
paddle.Tensor.sign(Tensor([50000, 5, 5],"float64"), )
paddle.Tensor.sign(Tensor([50000, 2],"float64"), )
paddle.Tensor.sign(Tensor([1124, 32],"float32"), )
paddle.Tensor.signbit(Tensor([12, 20, 2],"float32"), )
paddle.Tensor.signbit(Tensor([12, 20, 2],"float64"), )
paddle.Tensor.signbit(Tensor([12, 20, 2],"int16"), )
paddle.Tensor.sin(Tensor([131072, 128],"float32"), )
paddle.Tensor.sin(Tensor([32768, 128],"float32"), )
paddle.Tensor.sin(Tensor([131072, 16],"float32"), )
paddle.Tensor.slice_scatter(Tensor([8, 6],"float64"), Tensor([8, 3],"float64"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.split(Tensor([50153536],"bfloat16"), list[6144,32,32,50147328,], axis=0, )
paddle.Tensor.split(Tensor([47376448],"bfloat16"), list[6144,32,32,47370240,], axis=0, )
paddle.Tensor.split(Tensor([46534720],"bfloat16"), list[6144,32,32,46528512,], axis=0, )
paddle.Tensor.sqrt(Tensor([64, 80, 48, 48],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 44, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 40, 40],"float32"), )
paddle.Tensor.square(Tensor([8, 128],"float32"), )
paddle.Tensor.square(Tensor([1024],"float32"), )
paddle.Tensor.square(Tensor([2, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 3, 3840, 10240],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 80, 25500],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([200, 1, 37632, 2],"float32"), 1, )
paddle.Tensor.std(Tensor([1024, 1024, 8],"float32"), )
paddle.Tensor.std(Tensor([1024, 1024, 8],"float64"), )
paddle.Tensor.std(Tensor([1444, 1024],"float32"), axis=1, )
paddle.Tensor.subtract(Tensor([66244],"float32"), Tensor([66244],"float32"), )
paddle.Tensor.subtract(Tensor([23619],"float32"), Tensor([23619],"float32"), )
paddle.Tensor.subtract(Tensor([17157],"float32"), Tensor([17157],"float32"), )
paddle.Tensor.sum(Tensor([111616, 3584],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([108544, 3584],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([106496, 3584],"float32"), axis=-1, )
paddle.Tensor.tanh(Tensor([2, 4],"float64"), )
paddle.Tensor.tanh(Tensor([1, 2, 3],"float32"), )
paddle.Tensor.tanh(Tensor([1, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([38402, 1, 256],"float32"), tuple(1,1,1,), )
paddle.Tensor.tile(Tensor([36858, 1, 256],"float32"), tuple(1,1,1,), )
paddle.Tensor.tile(Tensor([1, 280, 376, 25, 3],"float32"), tuple(Tensor([],"int64"),1,1,1,1,), )
paddle.Tensor.tolist(Tensor([11, 25, 32, 43],"int64"), )
paddle.Tensor.tolist(Tensor([5514],"bool"), )
paddle.Tensor.tolist(Tensor([5392],"bool"), )
paddle.Tensor.topk(Tensor([1024, 8, 48],"float32"), 2, axis=-1, )
paddle.Tensor.topk(Tensor([128, 1000],"float32"), 5, 1, True, True, )
paddle.Tensor.topk(Tensor([1, 1000],"float32"), 5, 1, True, True, )
paddle.Tensor.transpose(Tensor([111616, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([108544, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([106496, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.tril(Tensor([2, 2, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([1, 2, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 2],"float32"), -1, )
paddle.Tensor.trunc(Tensor([28, 28],"float32"), )
paddle.Tensor.trunc(Tensor([2, 8, 8],"float32"), )
paddle.Tensor.trunc(Tensor([8, 8],"float32"), )
paddle.Tensor.unbind(Tensor([3, 960, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 864, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 60, 2304, 64],"float32"), 0, )
paddle.Tensor.unflatten(Tensor([7, 126, 3072],"float32"), -1, tuple(3,Tensor([],"int64"),), )
paddle.Tensor.unique(Tensor([38393],"int64"), )
paddle.Tensor.unique(Tensor([36840],"int64"), )
paddle.Tensor.unique(Tensor([8571],"int64"), )
paddle.Tensor.unsqueeze(Tensor([3, 3840, 10240],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([200, 544, 544],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([200, 544, 544],"float32"), 1, )
paddle.Tensor.var(Tensor([1000000, 4],"float64"), axis=0, )
paddle.Tensor.var(Tensor([1000, 784],"float32"), axis=0, )
paddle.Tensor.var(Tensor([100000, 4],"float64"), axis=0, )
paddle.Tensor.zero_(Tensor([100352, 8192],"float32"), )
paddle.Tensor.zero_(Tensor([8192, 100352],"float32"), )
paddle.Tensor.zero_(Tensor([8192, 57344],"float32"), )
paddle.abs(Tensor([16, 64, 256, 256],"float32"), )
paddle.abs(Tensor([16, 128, 128, 128],"float32"), )
paddle.abs(Tensor([16, 256, 64, 64],"float32"), )
paddle.acos(Tensor([10, 20, 1],"float32"), )
paddle.acos(Tensor([10, 10],"float32"), )
paddle.acos(x=Tensor([3, 3, 3],"float32"), )
paddle.acosh(Tensor([10, 20, 1],"float32"), )
